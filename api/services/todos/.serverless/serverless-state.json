{
  "service": {
    "service": "todoapp-todos-service",
    "serviceObject": {
      "name": "todoapp-todos-service"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "runtime": "nodejs14.x",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ListTodosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todoapp-todos-service-dev-ListTodos"
            }
          },
          "GetTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todoapp-todos-service-dev-GetTodo"
            }
          },
          "AddTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todoapp-todos-service-dev-AddTodo"
            }
          },
          "UpdateTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todoapp-todos-service-dev-UpdateTodo"
            }
          },
          "DeleteTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todoapp-todos-service-dev-DeleteTodo"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "todoapp-todos-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todoapp-todos-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todoapp-todos-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "todoapp-todos-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "NodeModulesLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/todoapp-todos-service/dev/1665551907180-2022-10-12T05:18:27.180Z/nodeModules.zip"
              },
              "LayerName": "nodeModules",
              "Description": "node_modules dependencies",
              "CompatibleRuntimes": [
                "nodejs14.x"
              ]
            }
          },
          "ListTodosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z/ListTodos.zip"
              },
              "Handler": "handler.listTodos",
              "Runtime": "nodejs14.x",
              "FunctionName": "todoapp-todos-service-dev-ListTodos",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "ListTodosLogGroup"
            ]
          },
          "GetTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z/GetTodo.zip"
              },
              "Handler": "handler.getTodo",
              "Runtime": "nodejs14.x",
              "FunctionName": "todoapp-todos-service-dev-GetTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "GetTodoLogGroup"
            ]
          },
          "AddTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z/AddTodo.zip"
              },
              "Handler": "handler.addTodo",
              "Runtime": "nodejs14.x",
              "FunctionName": "todoapp-todos-service-dev-AddTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "AddTodoLogGroup"
            ]
          },
          "UpdateTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z/UpdateTodo.zip"
              },
              "Handler": "handler.updateTodo",
              "Runtime": "nodejs14.x",
              "FunctionName": "todoapp-todos-service-dev-UpdateTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "UpdateTodoLogGroup"
            ]
          },
          "DeleteTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z/DeleteTodo.zip"
              },
              "Handler": "handler.deleteTodo",
              "Runtime": "nodejs14.x",
              "FunctionName": "todoapp-todos-service-dev-DeleteTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "NodeModulesLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "DeleteTodoLogGroup"
            ]
          },
          "ListTodosLambdaVersiong0VOz69mYDe2U6BmHIuKpjeDNhBctGXB9iLOi1E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListTodosLambdaFunction"
              },
              "CodeSha256": "A8QB8FQ9W9UfzS2RsWd7ZxbcGTxhhGxbXsL+NNdBi54="
            }
          },
          "GetTodoLambdaVersionxsD6i9l2Z0otDM1AeiFI2DYm8nUv1YkDTn4KmAoKUGU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTodoLambdaFunction"
              },
              "CodeSha256": "A8QB8FQ9W9UfzS2RsWd7ZxbcGTxhhGxbXsL+NNdBi54="
            }
          },
          "UpdateTodoLambdaVersionnOOCpB8oTFbGHlcsB4wv2dK29w9tViCgnLBdnjF4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateTodoLambdaFunction"
              },
              "CodeSha256": "A8QB8FQ9W9UfzS2RsWd7ZxbcGTxhhGxbXsL+NNdBi54="
            }
          },
          "AddTodoLambdaVersionBLKnRZTnVvbvaIqPCbancpg8Gc1KVMEybtYk1Dmr4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AddTodoLambdaFunction"
              },
              "CodeSha256": "A8QB8FQ9W9UfzS2RsWd7ZxbcGTxhhGxbXsL+NNdBi54="
            }
          },
          "DeleteTodoLambdaVersionXNyD2XnD8gvg5L4qh2AkYKZQkpoGvBuAhnydzN4TJA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteTodoLambdaFunction"
              },
              "CodeSha256": "A8QB8FQ9W9UfzS2RsWd7ZxbcGTxhhGxbXsL+NNdBi54="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-todoapp-todos-service",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ListTodosLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListTodosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationListTodos": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ListTodosLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteGetTodos": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /todos",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationListTodos"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationListTodos"
          },
          "GetTodoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetTodo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetTodoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRoutePostTodosIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /todos/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetTodo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetTodo"
          },
          "AddTodoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AddTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAddTodo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AddTodoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRoutePostTodos": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /todos",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAddTodo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAddTodo"
          },
          "UpdateTodoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateTodo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateTodoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRoutePutTodosIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /todos/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateTodo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateTodo"
          },
          "DeleteTodoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteTodo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteTodoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteDeleteTodosIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /todos/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteTodo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteTodo"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "NodeModulesLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "NodeModulesLambdaLayer"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-NodeModulesLambdaLayerQualifiedArn"
            }
          },
          "NodeModulesLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "a2ef8669c5bcc9d9e2e921648e80d98ffd5172f8",
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-NodeModulesLambdaLayerHash"
            }
          },
          "NodeModulesLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/todoapp-todos-service/dev/1665551907180-2022-10-12T05:18:27.180Z/nodeModules.zip",
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-NodeModulesLambdaLayerS3Key"
            }
          },
          "ListTodosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListTodosLambdaVersiong0VOz69mYDe2U6BmHIuKpjeDNhBctGXB9iLOi1E"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-ListTodosLambdaFunctionQualifiedArn"
            }
          },
          "GetTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTodoLambdaVersionxsD6i9l2Z0otDM1AeiFI2DYm8nUv1YkDTn4KmAoKUGU"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-GetTodoLambdaFunctionQualifiedArn"
            }
          },
          "UpdateTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateTodoLambdaVersionnOOCpB8oTFbGHlcsB4wv2dK29w9tViCgnLBdnjF4"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-UpdateTodoLambdaFunctionQualifiedArn"
            }
          },
          "AddTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AddTodoLambdaVersionBLKnRZTnVvbvaIqPCbancpg8Gc1KVMEybtYk1Dmr4"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-AddTodoLambdaFunctionQualifiedArn"
            }
          },
          "DeleteTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteTodoLambdaVersionXNyD2XnD8gvg5L4qh2AkYKZQkpoGvBuAhnydzN4TJA"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-DeleteTodoLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-todoapp-todos-service-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "ListTodos": {
        "handler": "handler.listTodos",
        "package": {
          "individually": true,
          "include": [
            "shared/**",
            "models/**"
          ],
          "artifact": "/home/mhmd/github/todos-app__serveless-lambda-angular/api/services/todos/.serverless/ListTodos.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ListTodosLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "httpApi": {
              "path": "/todos",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/todos"
          }
        ],
        "name": "todoapp-todos-service-dev-ListTodos",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ListTodosLambdaVersiong0VOz69mYDe2U6BmHIuKpjeDNhBctGXB9iLOi1E"
      },
      "GetTodo": {
        "handler": "handler.getTodo",
        "package": {
          "individually": true,
          "include": [
            "shared/**",
            "models/**"
          ],
          "artifact": "/home/mhmd/github/todos-app__serveless-lambda-angular/api/services/todos/.serverless/GetTodo.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetTodoLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "httpApi": {
              "path": "/todos/{id}",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/todos/{id}"
          }
        ],
        "name": "todoapp-todos-service-dev-GetTodo",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GetTodoLambdaVersionxsD6i9l2Z0otDM1AeiFI2DYm8nUv1YkDTn4KmAoKUGU"
      },
      "AddTodo": {
        "handler": "handler.addTodo",
        "package": {
          "individually": true,
          "include": [
            "shared/**",
            "models/**"
          ],
          "artifact": "/home/mhmd/github/todos-app__serveless-lambda-angular/api/services/todos/.serverless/AddTodo.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AddTodoLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "httpApi": {
              "path": "/todos",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/todos"
          }
        ],
        "name": "todoapp-todos-service-dev-AddTodo",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AddTodoLambdaVersionBLKnRZTnVvbvaIqPCbancpg8Gc1KVMEybtYk1Dmr4"
      },
      "UpdateTodo": {
        "handler": "handler.updateTodo",
        "package": {
          "individually": true,
          "include": [
            "shared/**",
            "models/**"
          ],
          "artifact": "/home/mhmd/github/todos-app__serveless-lambda-angular/api/services/todos/.serverless/UpdateTodo.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateTodoLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "httpApi": {
              "path": "/todos/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/todos/{id}"
          }
        ],
        "name": "todoapp-todos-service-dev-UpdateTodo",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "UpdateTodoLambdaVersionnOOCpB8oTFbGHlcsB4wv2dK29w9tViCgnLBdnjF4"
      },
      "DeleteTodo": {
        "handler": "handler.deleteTodo",
        "package": {
          "individually": true,
          "include": [
            "shared/**",
            "models/**"
          ],
          "artifact": "/home/mhmd/github/todos-app__serveless-lambda-angular/api/services/todos/.serverless/DeleteTodo.zip"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteTodoLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "httpApi": {
              "path": "/todos/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/todos/{id}"
          }
        ],
        "name": "todoapp-todos-service-dev-DeleteTodo",
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DeleteTodoLambdaVersionXNyD2XnD8gvg5L4qh2AkYKZQkpoGvBuAhnydzN4TJA"
      }
    },
    "configValidationMode": "error",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "todoapp-todos-service",
      "frameworkVersion": "3",
      "configValidationMode": "error",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/todoapp-todos-service/dev/code-artifacts",
        "artifactDirectoryName": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z"
      },
      "layers": {
        "nodeModules": {
          "path": "./layers",
          "name": "nodeModules",
          "description": "node_modules dependencies",
          "compatibleRuntimes": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NodeModulesLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
          },
          "package": {
            "artifact": "/home/mhmd/github/todos-app__serveless-lambda-angular/api/services/todos/.serverless/nodeModules.zip"
          },
          "artifactAlreadyUploaded": true
        }
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"layers\"]"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/todoapp-todos-service/dev/1665645099328-2022-10-13T07:11:39.328Z",
    "artifact": ""
  }
}